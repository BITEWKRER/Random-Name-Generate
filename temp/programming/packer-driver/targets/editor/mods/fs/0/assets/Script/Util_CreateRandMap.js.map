{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/Util_CreateRandMap.ts"],"names":["Util_CreateRandMap","Util_SimpleMath","initRoomList","room_number","max_width","max_height","min_width","min_height","rooms","r","i","room_width","Math","floor","random","room_height","room_raid","PI","room_x","cos","room_y","sin","room_local","x","y","w","h","to","push","sort","a","b","length","mid","forEach","val","getDistanceByTowPoint","MRoom","VRoom","searching","raid","getAngleByTowPoint","speed","next","j","i_info","left","right","top","bootom","j_info","MainRoom","ViceRoom","mid_p","Bowyer","poinset","index","triangle","splice","edge","c_center","getTriangleCircleCenter","c_r","getTriangleCircleRadius","st","ed","is_re","createConnectedRoad","vrooms","roadRects","edges","v1","v2","weight","tree","_Krusal","room_i","direction_horizon","direction_vertical","m_p","n_p","m_p_info","bottom","n_p_info","roadRect","rect","x_m","x_n","y_m","y_n","nrooms","r_i","info_r","vr_i","info_vr","createTerrains","createTerrain","room","terrainInfo","terrains","console","log","S","area","p","areanumber","ceil","p_j","s_j","sqrt","rp","id","k","x_j","y_j"],"mappings":"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","sourcesContent":["import { math, RecyclePool, Terrain } from \"cc\";\r\nimport { Util_SimpleMath } from \"./Util_SimpleMath\";\r\n\r\nexport class Util_CreateRandMap {\r\n  /*\r\n    room_number:输入要生成的房间数量\r\n    max_width:生成房间的最大宽度\r\n    max_height:生成房间的最大高度\r\n    min_width:生成房间的最小宽度\r\n    min_height:生成房间的最小高度\r\n    */\r\n  static initRoomList(\r\n    room_number: number,\r\n    max_width: number,\r\n    max_height: number,\r\n    min_width: number,\r\n    min_height: number\r\n  ) {\r\n    let rooms = [];\r\n\r\n    //在一个圆形区域内生成若干个大小不同的房间\r\n    const r: number = 100;\r\n    for (let i = 0; i < room_number * 4; i++) {\r\n      const room_width: number =\r\n        min_width + Math.floor(Math.random() * (max_width - min_width));\r\n      const room_height: number =\r\n        min_height + Math.floor(Math.random() * (max_height - min_height));\r\n      const room_raid: number = Math.random() * Math.PI * 2;\r\n      const room_x: number = Math.floor(\r\n        Math.cos(room_raid) * Math.random() * r\r\n      );\r\n      const room_y: number = Math.floor(\r\n        Math.sin(room_raid) * Math.random() * r\r\n      );\r\n      let room_local = {\r\n        x: room_x,\r\n        y: room_y,\r\n        w: room_width,\r\n        h: room_height,\r\n        to: [],\r\n      };\r\n      rooms.push(room_local);\r\n    }\r\n    //将重叠的房间进行分离\r\n    rooms[0].x = 0;\r\n    rooms[0].y = 0;\r\n\r\n    rooms.sort(function (a, b) {\r\n      return a.x - b.x;\r\n    });\r\n    for (let i = 1; i < rooms.length; i++) {\r\n      rooms[i].x = rooms[i - 1].x + rooms[i - 1].w;\r\n    }\r\n    rooms.sort(function (a, b) {\r\n      return a.y - b.y;\r\n    });\r\n    for (let i = 1; i < rooms.length; i++) {\r\n      rooms[i].y = rooms[i - 1].y + rooms[i - 1].h;\r\n    }\r\n\r\n    let mid = { x: 0, y: 0 };\r\n\r\n    rooms.forEach((val) => {\r\n      mid.x += val.x;\r\n      mid.y += val.y;\r\n    });\r\n    mid.x /= rooms.length;\r\n    mid.y /= rooms.length;\r\n    rooms.sort(function (a, b) {\r\n      return (\r\n        Util_SimpleMath.getDistanceByTowPoint(a.x, a.y, mid.x, mid.y) -\r\n        Util_SimpleMath.getDistanceByTowPoint(b.x, b.y, mid.x, mid.y)\r\n      );\r\n    });\r\n    // 将分离的房间聚拢；\r\n\r\n    let MRoom: any[] = [];\r\n    let VRoom: any[] = [];\r\n\r\n    for (let i = 0; i < rooms.length; i++) {\r\n      let searching = true;\r\n      let raid =\r\n        (Util_SimpleMath.getAngleByTowPoint(\r\n          rooms[i].x,\r\n          rooms[i].y,\r\n          mid.x,\r\n          mid.y\r\n        ) /\r\n          180) *\r\n        Math.PI;\r\n      let speed = 5;\r\n\r\n      while (searching) {\r\n        let next = {\r\n          x: rooms[i].x + Math.cos(raid) * speed,\r\n          y: rooms[i].y + Math.sin(raid) * speed,\r\n        };\r\n        if (\r\n          Util_SimpleMath.getDistanceByTowPoint(next.x, next.y, mid.x, mid.y) <=\r\n            speed ||\r\n          Util_SimpleMath.getDistanceByTowPoint(\r\n            rooms[i].x,\r\n            rooms[i].y,\r\n            mid.x,\r\n            mid.y\r\n          ) <= speed\r\n        ) {\r\n          searching = false;\r\n        }\r\n        for (let j = 0; j < rooms.length; j++) {\r\n          if (j != i) {\r\n            const i_info = {\r\n              left: next.x,\r\n              right: next.x + rooms[i].w,\r\n              top: next.y + rooms[i].h,\r\n              bootom: next.y,\r\n            };\r\n            const j_info = {\r\n              left: rooms[j].x,\r\n              right: rooms[j].x + rooms[j].w,\r\n              top: rooms[j].y + rooms[j].h,\r\n              bootom: rooms[j].y,\r\n            };\r\n            if (\r\n              !(\r\n                i_info.left > j_info.right ||\r\n                i_info.right < j_info.left ||\r\n                i_info.top < j_info.bootom ||\r\n                i_info.bootom > j_info.top\r\n              )\r\n            ) {\r\n              searching = false;\r\n            }\r\n          }\r\n        }\r\n        if (searching) {\r\n          rooms[i].x = next.x;\r\n          rooms[i].y = next.y;\r\n        }\r\n      }\r\n      if (i % 4 == 0) MRoom.push(rooms[i]);\r\n      else VRoom.push(rooms[i]);\r\n    }\r\n\r\n    return { MainRoom: MRoom, ViceRoom: VRoom, mid_p: mid };\r\n  }\r\n  /*\r\n    基于平面点集的三角剖分，使用逐点插入算法\r\n    poinset:点集\r\n    index:当前点在点集的下标\r\n    triangle:三角形数组\r\n    */\r\n  static Bowyer(poinset: any[], index: number, triangle: number[][]): any {\r\n    //初次执行先添加超级三角形\r\n    if (index == 0) {\r\n      poinset.push({ x: -30000, y: -30000 });\r\n      poinset.push({ x: 30000, y: -30000 });\r\n      poinset.push({ x: 0, y: 30000 });\r\n      triangle.splice(0, 0, [\r\n        poinset.length - 1,\r\n        poinset.length - 2,\r\n        poinset.length - 3,\r\n      ]);\r\n    }\r\n    if (index == poinset.length) {\r\n      //移除超级三角形\r\n      for (let i = triangle.length - 1; i >= 0; i--) {\r\n        if (\r\n          poinset[triangle[i][0]].y == 30000 ||\r\n          poinset[triangle[i][0]].y == -30000 ||\r\n          poinset[triangle[i][1]].y == 30000 ||\r\n          poinset[triangle[i][1]].y == -30000 ||\r\n          poinset[triangle[i][2]].y == 30000 ||\r\n          poinset[triangle[i][2]].y == -30000\r\n        ) {\r\n          triangle.splice(i, 1);\r\n        }\r\n      }\r\n      poinset.splice(poinset.length - 3, 3);\r\n      //返回三角形数组\r\n      return triangle;\r\n    }\r\n\r\n    let edge: any[] = [];\r\n\r\n    for (let i = triangle.length - 1; i >= 0; i--) {\r\n      //计算三角形外接圆的圆心和周长\r\n      const c_center = Util_SimpleMath.getTriangleCircleCenter(\r\n        poinset[triangle[i][0]].x,\r\n        poinset[triangle[i][0]].y,\r\n        poinset[triangle[i][1]].x,\r\n        poinset[triangle[i][1]].y,\r\n        poinset[triangle[i][2]].x,\r\n        poinset[triangle[i][2]].y\r\n      );\r\n      const c_r = Util_SimpleMath.getTriangleCircleRadius(\r\n        poinset[triangle[i][0]].x,\r\n        poinset[triangle[i][0]].y,\r\n        poinset[triangle[i][1]].x,\r\n        poinset[triangle[i][1]].y,\r\n        poinset[triangle[i][2]].x,\r\n        poinset[triangle[i][2]].y\r\n      );\r\n      //判断点是否在外接圆内\r\n      if (\r\n        Util_SimpleMath.getDistanceByTowPoint(\r\n          poinset[index].x,\r\n          poinset[index].y,\r\n          c_center.x,\r\n          c_center.y\r\n        ) < c_r\r\n      ) {\r\n        //添加三角形的三条边到边数组\r\n        edge.push({ st: triangle[i][0], ed: triangle[i][1] });\r\n        edge.push({ st: triangle[i][0], ed: triangle[i][2] });\r\n        edge.push({ st: triangle[i][1], ed: triangle[i][2] });\r\n        //移除这个三角形\r\n        triangle.splice(i, 1);\r\n      }\r\n    }\r\n    //去掉重复的边\r\n    for (let i = 0; i < edge.length - 1; i++) {\r\n      let is_re = false;\r\n      for (let j = i + 1; j < edge.length; j++) {\r\n        if (\r\n          (edge[i].st == edge[j].st && edge[i].ed == edge[j].ed) ||\r\n          (edge[i].ed == edge[j].st && edge[i].st == edge[j].ed)\r\n        ) {\r\n          edge[j] = -1;\r\n          is_re = true;\r\n        }\r\n      }\r\n      if (is_re) {\r\n        edge[i] = -1;\r\n      }\r\n    }\r\n\r\n    for (let i = edge.length - 1; i >= 0; i--) {\r\n      if (edge[i] == -1) edge.splice(i, 1);\r\n    }\r\n    //将边添加到三角形数组中\r\n    edge.forEach((val) => {\r\n      triangle.push([index, val.st, val.ed]);\r\n    });\r\n\r\n    return this.Bowyer(poinset, index + 1, triangle);\r\n  }\r\n  /*\r\n    生成房间通路\r\n    rooms:房间的列表\r\n    */\r\n  static createConnectedRoad(rooms: any[], vrooms: any[]) {\r\n    let roadRects: any[] = [];\r\n    let triangle: number[][] = [];\r\n    triangle = this.Bowyer(rooms, 0, triangle);\r\n    //提取三角形的边\r\n    let edges: any[] = [];\r\n\r\n    triangle.forEach((val) => {\r\n      edges.push({\r\n        v1: val[0],\r\n        v2: val[1],\r\n        weight: Util_SimpleMath.getDistanceByTowPoint(\r\n          rooms[val[0]].x,\r\n          rooms[val[0]].y,\r\n          rooms[val[1]].x,\r\n          rooms[val[1]].x\r\n        ),\r\n      });\r\n      edges.push({\r\n        v1: val[0],\r\n        v2: val[2],\r\n        weight: Util_SimpleMath.getDistanceByTowPoint(\r\n          rooms[val[0]].x,\r\n          rooms[val[0]].y,\r\n          rooms[val[2]].x,\r\n          rooms[val[2]].x\r\n        ),\r\n      });\r\n      edges.push({\r\n        v1: val[1],\r\n        v2: val[2],\r\n        weight: Util_SimpleMath.getDistanceByTowPoint(\r\n          rooms[val[1]].x,\r\n          rooms[val[1]].y,\r\n          rooms[val[2]].x,\r\n          rooms[val[2]].x\r\n        ),\r\n      });\r\n    });\r\n    //删除公共边\r\n    edges.forEach((val, i) => {\r\n      for (let j = i + 1; j < edges.length; j++) {\r\n        if (val != -1 && edges[j] != -1) {\r\n          if (\r\n            (val.v1 == edges[j].v1 && val.v2 == edges[j].v2) ||\r\n            (val.v2 == edges[j].v1 && val.v1 == edges[j].v2)\r\n          ) {\r\n            edges[j] = -1;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    for (let i = edges.length - 1; i >= 0; i--) {\r\n      if (edges[i] == -1) edges.splice(i, 1);\r\n    }\r\n    //用最小生成树来获得房间之间的连通关系\r\n    let tree: any[] = Util_SimpleMath._Krusal(rooms, edges);\r\n\r\n    tree.forEach((val) => {\r\n      rooms[val.v1].to.push(val.v2);\r\n    });\r\n    //生成道路矩形\r\n    rooms.forEach((room_i, index) => {\r\n      if (room_i.to.length > 0) {\r\n        for (let i = 0; i < room_i.to.length; i++) {\r\n          //从两个房间的边上各自选取一点作为通路的起点和终点\r\n          let direction_horizon = 0;\r\n          let direction_vertical = 0;\r\n          let m_p = room_i;\r\n          let n_p = rooms[room_i.to[i]];\r\n\r\n          let m_p_info = {\r\n            left: m_p.x,\r\n            right: m_p.x + m_p.w,\r\n            top: m_p.y + m_p.h,\r\n            bottom: m_p.y,\r\n          };\r\n          let n_p_info = {\r\n            left: n_p.x,\r\n            right: n_p.x + n_p.w,\r\n            top: n_p.y + n_p.h,\r\n            bottom: n_p.y,\r\n          };\r\n\r\n          if (m_p_info.right < n_p_info.left) direction_horizon = 1;\r\n          else if (m_p_info.left > n_p_info.right) direction_horizon = -1;\r\n\r\n          if (m_p_info.top < n_p_info.bottom) direction_vertical = 1;\r\n          else if (m_p_info.bottom > n_p_info.top) direction_vertical = -1;\r\n\r\n          let roadRect = [];\r\n          //由于房间不重叠 所以不会出现 horizon 和 vertical 都为0的情况\r\n\r\n          let rect = { left: 0, right: 0, top: 0, bottom: 0 };\r\n          rect.left =\r\n            m_p_info.left > n_p_info.left ? m_p_info.left : n_p_info.left;\r\n          rect.right =\r\n            m_p_info.right < n_p_info.right ? m_p_info.right : n_p_info.right;\r\n          rect.bottom =\r\n            m_p_info.bottom > n_p_info.bottom\r\n              ? m_p_info.bottom\r\n              : n_p_info.bottom;\r\n          rect.top = m_p_info.top < n_p_info.top ? m_p_info.top : n_p_info.top;\r\n          if (direction_horizon == 0) {\r\n            if (direction_vertical == 1)\r\n              roadRect.push({\r\n                x: (rect.left + rect.right) / 2,\r\n                y: m_p_info.top,\r\n                w: 1,\r\n                h: n_p_info.bottom - m_p_info.top,\r\n              });\r\n            else\r\n              roadRect.push({\r\n                x: (rect.left + rect.right) / 2,\r\n                y: n_p_info.top,\r\n                w: 1,\r\n                h: m_p_info.bottom - n_p_info.top,\r\n              });\r\n          }\r\n          if (direction_vertical == 0) {\r\n            if (direction_horizon == 1)\r\n              roadRect.push({\r\n                x: rect.right,\r\n                y: (rect.top + rect.bottom) / 2,\r\n                w: n_p_info.left - m_p_info.right,\r\n                h: 1,\r\n              });\r\n            else\r\n              roadRect.push({\r\n                x: rect.right,\r\n                y: (rect.top + rect.bottom) / 2,\r\n                w: m_p_info.left - n_p_info.right,\r\n                h: 1,\r\n              });\r\n          }\r\n          if (direction_horizon != 0 && direction_vertical != 0) {\r\n            let mid = {\r\n              x_m: (m_p_info.left + m_p_info.right) / 2,\r\n              x_n: (n_p_info.left + n_p_info.right) / 2,\r\n              y_m: (m_p_info.top + m_p_info.bottom) / 2,\r\n              y_n: (n_p_info.top + n_p_info.bottom) / 2,\r\n            };\r\n            if (direction_horizon == 1) {\r\n              if (direction_vertical == 1) {\r\n                roadRect.push({\r\n                  x: mid.x_m,\r\n                  y: m_p_info.top,\r\n                  w: 1,\r\n                  h: mid.y_n - m_p_info.top,\r\n                });\r\n                roadRect.push({\r\n                  x: mid.x_m,\r\n                  y: mid.y_n,\r\n                  w: n_p_info.left - mid.x_m,\r\n                  h: 1,\r\n                });\r\n              } else {\r\n                roadRect.push({\r\n                  x: m_p_info.right,\r\n                  y: mid.y_m,\r\n                  w: mid.x_n - m_p_info.right + 1,\r\n                  h: 1,\r\n                });\r\n                roadRect.push({\r\n                  x: mid.x_n,\r\n                  y: n_p_info.top,\r\n                  w: 1,\r\n                  h: mid.y_m - n_p_info.top,\r\n                });\r\n              }\r\n            } else {\r\n              if (direction_vertical == 1) {\r\n                roadRect.push({\r\n                  x: mid.x_n,\r\n                  y: mid.y_m,\r\n                  w: 1,\r\n                  h: n_p_info.bottom - mid.y_m,\r\n                });\r\n                roadRect.push({\r\n                  x: mid.x_n,\r\n                  y: mid.y_m,\r\n                  w: m_p_info.left - mid.x_n,\r\n                  h: 1,\r\n                });\r\n              } else {\r\n                roadRect.push({\r\n                  x: n_p_info.right,\r\n                  y: mid.y_n,\r\n                  w: mid.x_m - n_p_info.right,\r\n                  h: 1,\r\n                });\r\n                roadRect.push({\r\n                  x: mid.x_m,\r\n                  y: mid.y_n,\r\n                  w: 1,\r\n                  h: m_p_info.bottom - mid.y_n,\r\n                });\r\n              }\r\n            }\r\n          }\r\n          let nrooms: any[] = [];\r\n          roadRect.forEach((r_i) => {\r\n            const info_r = {\r\n              left: r_i.x,\r\n              right: r_i.x + r_i.w,\r\n              bottom: r_i.y,\r\n              top: r_i.y + r_i.h,\r\n            };\r\n            vrooms.forEach((vr_i) => {\r\n              const info_vr = {\r\n                left: vr_i.x,\r\n                right: vr_i.x + vr_i.w,\r\n                bottom: vr_i.y,\r\n                top: vr_i.y + vr_i.h,\r\n              };\r\n              if (\r\n                !(\r\n                  info_r.left > info_vr.right ||\r\n                  info_vr.left > info_r.right ||\r\n                  info_r.bottom > info_vr.top ||\r\n                  info_vr.bottom > info_r.top\r\n                )\r\n              )\r\n                nrooms.push(vr_i);\r\n            });\r\n          });\r\n\r\n          nrooms.forEach((val) => {\r\n            roadRect.push(val);\r\n          });\r\n          roadRect.forEach((val) => {\r\n            roadRects.push(val);\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return roadRects;\r\n  }\r\n\r\n  static createTerrains(rooms: any[]) {}\r\n  static createTerrain(room: any, terrainInfo: any[]) {\r\n    let terrains: { [name: string]: any } = [];\r\n    for (let x = 0; x < room.w; x++) {\r\n      for (let y = 0; y < room.h; y++) {\r\n        terrains[x + \",\" + y] = 0;\r\n      }\r\n    }\r\n    console.log(\"房间长宽:\" + room.w + \",\" + room.h);\r\n    for (let i = 0; i < terrainInfo.length; i++) {\r\n      let S: number = terrainInfo[i].area * room.w * room.h;\r\n      let p: number = 1;\r\n      let areanumber: number = 1 + Math.ceil(Math.random() * 5);\r\n      console.log(\"地形\" + i + \"一共有\" + areanumber + \"个区域\");\r\n      for (let j = 0; j < areanumber; j++) {\r\n        let p_j: number;\r\n        if (j != areanumber - 1) {\r\n          p_j = p * Math.random();\r\n          p -= p_j;\r\n        } else p_j = p;\r\n\r\n        let s_j: number = S * p_j;\r\n        let r: number = Math.ceil(Math.sqrt(s_j / Math.PI));\r\n        let rp = {\r\n          x: Math.ceil(Math.random() * room.w),\r\n          y: Math.ceil(Math.random() * room.h),\r\n        };\r\n        terrains[rp.x + \",\" + rp.y] = terrainInfo[i].id;\r\n        console.log(\r\n          \"地形\" +\r\n            i +\r\n            \"区域\" +\r\n            j +\r\n            \"占比\" +\r\n            p_j +\r\n            \",实际面积\" +\r\n            s_j +\r\n            \",圆心:\" +\r\n            rp.x +\r\n            \",\" +\r\n            rp.y +\r\n            \"半径r:\" +\r\n            r\r\n        );\r\n        for (let k = r; k > 0; k--) {\r\n          for (let raid = 0; raid < Math.PI * 2; raid += Math.PI / 6) {\r\n            let x_j = Math.ceil(rp.x + Math.cos(raid) * k);\r\n            let y_j = Math.ceil(rp.y + Math.sin(raid) * k);\r\n            if (terrains[x_j + \",\" + y_j] == 0)\r\n              terrains[x_j + \",\" + y_j] = terrainInfo[i].id;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // for (let y = 0; y < room.h; y++) {\r\n    //     let s = '';\r\n    //     for (let x = 0; x < room.w; x++) {\r\n    //         s += terrains[x + ',' + y];\r\n    //     }\r\n    //     console.log(s);\r\n    // }\r\n    return terrains;\r\n  }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.0/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.0/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.0/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}
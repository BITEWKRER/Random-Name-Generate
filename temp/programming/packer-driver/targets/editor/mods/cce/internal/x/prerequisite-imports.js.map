{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,sBAAa,qGAAb,CAAD,EAAsH,sBAAa,yGAAb,CAAtH,EAA+O,sBAAa,yGAAb,CAA/O,EAAwW,sBAAa,iGAAb,CAAxW,EAAyd,sBAAa,sGAAb,CAAzd,EAA+kB,sBAAa,gHAAb,CAA/kB,EAA+sB,sBAAa,6FAAb,CAA/sB,EAA4zB,sBAAa,uGAAb,CAA5zB,EAAm7B,sBAAa,yGAAb,CAAn7B,EAA4iC,sBAAa,6GAAb,CAA5iC,EAAyqC,sBAAa,0GAAb,CAAzqC,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/Until_JsonInit.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/Until_Relationship.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/Util_CreateRandMap.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/Util_Event.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/Util_SimpleMath.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/Util_WaveCollapseFunction.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/avatar.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/test/drawMapInfo.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/test/map_unit_info.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/test/test_wavefunction.ts'), () => import('file:///C:/Users/Administrator/Desktop/Company_project/NewProject_8/assets/Script/until_randomTerrain.ts')];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}